{
    "defaultSeverity": "INFO",
    "checks": [
        {
            "type": "AvoidInlineConditionals"
        },
        {
            "type": "ReturnCount"
        },
        {
            "type": "NullableParameter"
        },
        {
            "type": "Anonymous"
        },
        {
            "type": "ArrayAccess"
        },
        {
            "type": "ArrayLiteral"
        },
        {
            "type": "AvoidStarImport"
        },
        {
            "type": "CatchParameterName",
            "props": {
                "format": "^(e)$"
            }
        },
        {
            "type": "ConstantName",
            "props": {
                "ignoreExtern": true,
                "format": "^[A-Z][A-Z0-9]*(_[A-Z0-9_]+)*$"
            }
        },
        {
            "type": "CyclomaticComplexity",
            "props": {
                "thresholds": [
                    {
                        "complexity": 20,
                        "severity": "WARNING"
                    },
                    {
                        "complexity": 25,
                        "severity": "ERROR"
                    }
                ]
            }
        },
        {
            "type": "DefaultComesLast"
        },
        {
            "type": "Dynamic"
        },
        {
            "type": "ERegLiteral"
        },
        {
            "type": "EmptyBlock",
            "props": {
                "tokens": [
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "ABSTRACT_DEF",
                    "TYPEDEF_DEF",
                    "INTERFACE_DEF",
                    "OBJECT_DECL",
                    "FUNCTION",
                    "FOR",
                    "IF",
                    "WHILE",
                    "SWITCH",
                    "TRY",
                    "CATCH"
                ],
                "option": "empty"
            }
        },
        {
            "type": "EmptyLines",
            "props": {
                "max": 1,
                "requireEmptyLineAfterAbstract": false,
                "requireEmptyLineAfterClass": false
            }
        },
        {
            "type": "EmptyPackage"
        },
        {
            "type": "FileLength",
            "props": {
                "max": 2000
            }
        },
        {
            "type": "HexadecimalLiteral",
            "props": {
                "option": "upperCase"
            }
        },
        {
            "type": "HiddenField",
            "props": {
                "ignoreSetter": true,
                "ignoreFormat": "^(main|run)$",
                "ignoreConstructorParameter": true
            }
        },
        {
            "type": "IndentationCharacter",
            "props": {
                "character": "tab"
            }
        },
        {
            "type": "InnerAssignment"
        },
        {
            "type": "Interface",
            "props": {
                "allowMarkerInterfaces": true,
                "allowProperties": false
            }
        },
        {
            "type": "LeftCurly",
            "props": {
                "tokens": [
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "ABSTRACT_DEF",
                    "TYPEDEF_DEF",
                    "INTERFACE_DEF",
                    "FUNCTION",
                    "FOR",
                    "IF",
                    "WHILE",
                    "SWITCH",
                    "TRY",
                    "CATCH"
                ],
                "ignoreEmptySingleline": true,
                "option": "eol"
            }
        },
        {
            "type": "LineLength",
            "props": {
                "max": 160,
                "ignorePattern": "(^@desc)|(LONG LINE TEST)"
            }
        },
        {
            "type": "ListenerName",
            "props": {
                "listeners": [
                    "addEventListener",
                    "addListener",
                    "on",
                    "once"
                ],
                "format": "^_?[a-z][a-zA-Z0-9]*$"
            }
        },
        {
            "type": "LocalVariableName",
            "props": {
                "ignoreExtern": true,
                "format": "^[a-z][a-zA-Z0-9]*$"
            }
        },
        {
            "type": "MagicNumber",
            "props": {
                "ignoreNumbers": [-1, 0, 1, 2, 3, 5, 8, 13, 21, 34, 100]
            }
        },
        {
            "type": "MemberName",
            "props": {
                "ignoreExtern": true,
                "format": "^[a-z][a-zA-Z0-9]*$",
                "tokens": [
                    "CLASS",
                    "PUBLIC",
                    "PRIVATE",
                    "TYPEDEF"
                ]
            }
        },
        {
            "type": "MemberName",
            "props": {
                "ignoreExtern": true,
                "format": "^[A-Z0-9_]*$",
                "tokens": [
                    "ENUM"
                ]
            }
        },
        {
            "type": "MethodCount",
            "props": {
                "maxPrivate": 50,
                "maxPublic": 50,
                "maxTotal": 50
            }
        },
        {
            "type": "MethodLength",
            "props": {
                "max": 50
            }
        },
        {
            "type": "MethodName",
            "props": {
                "ignoreExtern": true,
                "format": "^[a-z][a-zA-Z0-9]*$"
            }
        },
        {
            "type": "ModifierOrder",
            "props": {
                "modifiers": [
                    "MACRO",
                    "OVERRIDE",
                    "PUBLIC_PRIVATE",
                    "STATIC",
                    "INLINE",
                    "DYNAMIC"
                ]
            }
        },
        {
            "type": "MultipleStringLiterals",
            "props": {
                "minLength": 2,
                "ignore": "^\\s+$",
                "allowDuplicates": 2
            }
        },
        {
            "type": "MultipleVariableDeclarations"
        },
        {
            "type": "NeedBraces",
            "props": {
                "allowSingleLineStatement": true,
                "tokens": [
                    "FOR",
                    "IF",
                    "ELSE_IF",
                    "WHILE",
                    "DO_WHILE"
                ]
            }
        },
        {
            "type": "NestedForDepth"
        },
        {
            "type": "NestedIfDepth"
        },
        {
            "type": "NestedTryDepth"
        },
        {
            "type": "OperatorWhitespace",
            "props": {
                "assignOpPolicy": "around",
                "unaryOpPolicy": "none",
                "ternaryOpPolicy": "around",
                "arithmeticOpPolicy": "around",
                "compareOpPolicy": "around",
                "bitwiseOpPolicy": "around",
                "boolOpPolicy": "around",
                "intervalOpPolicy": "none",
                "arrowPolicy": "around",
                "functionArgPolicy": "around"
            }
        },
        {
            "type": "OperatorWrap",
            "props": {
                "tokens": [
                    "=",
                    "+",
                    "-",
                    "*",
                    "/",
                    "%",
                    ">",
                    "<",
                    ">=",
                    "<=",
                    "==",
                    "!=",
                    "&",
                    "|",
                    "^",
                    "&&",
                    "||",
                    "<<",
                    ">>",
                    ">>>",
                    "+=",
                    "-=",
                    "*=",
                    "/=",
                    "%=",
                    "<<=",
                    ">>=",
                    ">>>=",
                    "|=",
                    "&=",
                    "^=",
                    "...",
                    "=>",
                    "++",
                    "--"
                ],
                "option": "eol"
            }
        },
        {
            "type": "ParameterName",
            "props": {
                "ignoreExtern": true,
                "format": "^(_|[a-z][a-zA-Z0-9]*$)"
            }
        },
        {
            "type": "ParameterNumber",
            "props": {
                "max": 7,
                "ignoreOverriddenMethods": false
            }
        },
        {
            "type": "RedundantModifier"
        },
        {
            "type": "Return",
            "props": {
                "allowEmptyReturn": true,
                "enforceReturnType": false
            }
        },
        {
            "type": "RightCurly",
            "props": {
                "tokens": [
                    "CLASS_DEF",
                    "ENUM_DEF",
                    "ABSTRACT_DEF",
                    "TYPEDEF_DEF",
                    "INTERFACE_DEF",
                    "OBJECT_DECL",
                    "FUNCTION",
                    "FOR",
                    "IF",
                    "WHILE",
                    "SWITCH",
                    "TRY",
                    "CATCH"
                ],
                "option": "aloneorsingle"
            }
        },
        {
            "type": "SeparatorWhitespace",
            "props": {
                "dotPolicy": "none",
                "commaPolicy": "after",
                "semicolonPolicy": "after"
            }
        },
        {
            "type": "SeparatorWrap",
            "props": {
                "tokens": [
                    ",",
                    "."
                ],
                "option": "eol"
            }
        },
        {
            "type": "SimplifyBooleanExpression"
        },
        {
            "type": "SimplifyBooleanReturn"
        },
        {
            "type": "Spacing",
            "props": {
                "spaceIfCondition": true,
                "spaceAroundBinop": true,
                "spaceForLoop": true,
                "ignoreRangeOperator": true,
                "spaceWhileLoop": true,
                "spaceCatch": true,
                "spaceSwitchCase": true,
                "noSpaceAroundUnop": true
            }
        },
        {
            "type": "StringLiteral",
            "props": {
                "allowException": true,
                "policy": "doubleAndInterpolation"
            }
        },
        {
            "type": "TODOComment"
        },
        {
            "type": "TabForAligning"
        },
        {
            "type": "Trace"
        },
        {
            "type": "TrailingWhitespace"
        },
        {
            "type": "Type",
            "props": {
                "ignoreEnumAbstractValues": truedfg
            }
        },
        {
            "type": "TypeName"
            "props": {
                "ignoreExtern": true,
                "format": "^[A-Z]+[a-zA-Z0-9]*$"
            }
        },
        {
            "type": "UnnecessaryConstructor"
        },
        {
            "type": "UnusedImport",
            "props": {
                "ignoreModules": [
                    "haxeparser.Data",
                    "haxeparser.Data.Token",
                    "haxeparser.Data.TokenDef",
                    "haxeparser.Data.TypeDecl",
                    "haxe.macro.Expr",
                    "haxe.macro.Expr.Access",
                    "haxe.macro.Expr.Field",
                    "haxe.macro.Expr.Function"
                ],
                "moduleTypeMap": {
                    "checkstyle.Config": [
                        "CheckConfig"
                    ],
                    "checkstyle.ChecksInfo": [
                        "CheckInfo"
                    ]
                }
            }
        },
        {
            "type": "VariableInitialisation"
        },
        {
            "type": "WhitespaceAfter",
            "props": {
                "tokens": [
                    ",",
                    ";"
                ]
            }
        },
        {
            "type": "WhitespaceAround",
            "props": {
                "tokens": [
                    "=",
                    "+",
                    "-",
                    "*",
                    "/",
                    "%",
                    ">",
                    "<",
                    ">=",
                    "<=",
                    "==",
                    "!=",
                    "&",
                    "|",
                    "^",
                    "&&",
                    "||",
                    "<<",
                    ">>",
                    ">>>",
                    "+=",
                    "-=",
                    "*=",
                    "/=",
                    "%=",
                    "<<=",
                    ">>=",
                    ">>>=",
                    "|=",
                    "&=",
                    "^=",
                    "=>"
                ]
            }
        }
    ],
    "exclude": {
        "all": [],
        "Dynamic": [
        ],
        "MultipleStringLiterals": [
        ],
        "CyclomaticComplexity": [
        ],
        "LeftCurly": [
        ],
        "RightCurly": [
        ],
        "MethodCount": [
        ],
        "MethodLength": [
        ],
        "NestedForDepth": [
        ],
        "MemberName": [
        ]
    }
}